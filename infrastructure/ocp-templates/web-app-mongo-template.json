{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "web-app-mongo",
        "creationTimestamp": null,
        "annotations": {
            "description": "Template for microservices listening on port 8080 with Git source and strategy docker with a dedicated mongodb",
            "iconClass": "icon-shadowman",
            "tags": "web-app-template,https,docker,mongo,mongodb"
        }
    },
    "objects": [{
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${MICROSERVICE_NAME}",
                "labels": {
                    "microservice": "${MICROSERVICE_NAME}",
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "triggers": [{
                        "type": "GitHub",
                        "github": {
                            "secret": "1802aa5420b11b2c"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    }
                ],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${GIT_REPO_URL}",
                        "ref": "${GIT_REPO_BRANCH}"
                    },
                    "contextDir": "${GIT_CONTEXT_DIR}",
                    "sourceSecret": {
                        "name": "gitsecret"
                    }
                },
                "strategy": {
                    "type": "Docker",
                    "dockerStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${BASE_IMAGE_NAMESPACE}",
                            "name": "${BASE_IMAGE_NAME}:${BASE_IMAGE_TAG}"
                        }
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${MICROSERVICE_NAME}:latest"
                    }
                },
                "resources": {
                    "requests": {
                        "cpu": "${BUILD_CPU_REQUEST}",
                        "memory": "${BUILD_MEM_REQUEST}"
                    },
                    "limits": {
                        "cpu": "${BUILD_CPU_LIMIT}",
                        "memory": "${BUILD_MEM_LIMIT}"
                    }
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${MICROSERVICE_NAME}",
                "generation": 1,
                "labels": {
                    "microservice": "${MICROSERVICE_NAME}",
                    "applicationName": "${APPLICATION_NAME}"
                }
            },
            "spec": {},
            "status": {
                "dockerImageRepository": ""
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [{
                    "protocol": "TCP",
                    "name": "http",
                    "port": 8080,
                    "targetPort": 8080
                }],
                "selector": {
                    "deploymentConfig": "${MICROSERVICE_NAME}"
                }
            },
            "metadata": {
                "name": "${MICROSERVICE_NAME}",
                "labels": {
                    "microservice": "${MICROSERVICE_NAME}",
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's http port."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${MICROSERVICE_NAME}",
            "metadata": {
                "name": "${MICROSERVICE_NAME}",
                "labels": {
                    "microservice": "${MICROSERVICE_NAME}",
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "kind": "Service",
                    "name": "${MICROSERVICE_NAME}"
                },
                "tls": {
                    "insecureEdgeTerminationPolicy": "Redirect",
                    "termination": "edge"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${MICROSERVICE_NAME}",
                "labels": {
                    "microservice": "${MICROSERVICE_NAME}",
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "0%",
                        "maxSurge": "20%"
                    },
                    "resources": {}
                },
                "triggers": [{
                    "type": "ImageChange",
                    "imageChangeParams": {
                        "automatic": true,
                        "containerNames": [
                            "${MICROSERVICE_NAME}"
                        ],
                        "from": {
                            "kind": "ImageStream",
                            "name": "${MICROSERVICE_NAME}"
                        }
                    }
                }],
                "replicas": "${NUM_REPLICAS}",
                "selector": {
                    "deploymentConfig": "${MICROSERVICE_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${MICROSERVICE_NAME}",
                        "labels": {
                            "deploymentConfig": "${MICROSERVICE_NAME}",
                            "microservice": "${MICROSERVICE_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 30,
                        "containers": [{
                            "name": "${MICROSERVICE_NAME}",
                            "image": "${MICROSERVICE_NAME}",
                            "readinessProbe": {
                                "tcpSocket": {
                                    "port": 8080
                                },
                                "initialDelaySeconds": "${READINESS_DELAY}",
                                "timeoutSeconds": 10
                            },
                            "livenessProbe": {
                                "tcpSocket": {
                                    "port": 8080
                                },
                                "initialDelaySeconds": "${LIVENESS_DELAY}",
                                "timeoutSeconds": 10
                            },
                            "ports": [{
                                "name": "http",
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }],
                            "resources": {
                                "requests": {
                                    "cpu": "${DEPLOY_CPU_REQUEST}",
                                    "memory": "${DEPLOY_MEM_REQUEST}"
                                },
                                "limits": {
                                    "cpu": "${DEPLOY_CPU_LIMIT}",
                                    "memory": "${DEPLOY_MEM_LIMIT}"
                                }
                            },
                            "env": [{
                                    "name": "APP_POD_NAME",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "fieldPath": "metadata.name"
                                        }
                                    }
                                },
                                {
                                    "name": "APP_POD_NAMESPACE",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                },
                                {
                                    "name": "MONGODB_USER",
                                    "value": "${DATABASE_USER}"
                                },
                                {
                                    "name": "MONGODB_PASSWORD",
                                    "value": "${DATABASE_PASSWORD}"
                                },
                                {
                                    "name": "MONGODB_DATABASE",
                                    "value": "${DATABASE_NAME}"
                                },
                                {
                                    "name": "MONGODB_ADMIN_PASSWORD",
                                    "value": "${DATABASE_ADMIN_PASSWORD}"
                                }
                            ]
                        }]
                    }
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${MICROSERVICE_NAME}-db",
                "annotations": {
                    "description": "Exposes the database pod"
                },
                "labels": {
                    "name": "${MICROSERVICE_NAME}-db",
                    "application": "${APPLICATION_NAME}",
                    "microservice": "${MICROSERVICE_NAME}"
                }
            },
            "spec": {
                "ports": [{
                    "name": "mongodb",
                    "port": 27017,
                    "targetPort": 27017
                }],
                "selector": {
                    "name": "${MICROSERVICE_NAME}-db"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${MICROSERVICE_NAME}-db",
                "annotations": {
                    "description": "Defines how to deploy the database"
                },
                "labels": {
                    "name": "${MICROSERVICE_NAME}-db",
                    "microservice": "${MICROSERVICE_NAME}",
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [{
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "mongodb"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${MONGO_IMAGE_STREAM_NAMESPACE}",
                                "name": "mongodb:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "name": "${MICROSERVICE_NAME}-db"
                },
                "template": {
                    "metadata": {
                        "name": "${MICROSERVICE_NAME}-db",
                        "labels": {
                            "name": "${MICROSERVICE_NAME}-db",
                            "application": "${APPLICATION_NAME}",
                            "microservice": "${MICROSERVICE_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [{
                            "name": "mongodb",
                            "image": " ",
                            "ports": [{
                                "containerPort": 27017
                            }],
                            "env": [{
                                    "name": "MONGODB_USER",
                                    "value": "${DATABASE_USER}"
                                },
                                {
                                    "name": "MONGODB_PASSWORD",
                                    "value": "${DATABASE_PASSWORD}"
                                },
                                {
                                    "name": "MONGODB_DATABASE",
                                    "value": "${DATABASE_NAME}"
                                },
                                {
                                    "name": "MONGODB_ADMIN_PASSWORD",
                                    "value": "${DATABASE_ADMIN_PASSWORD}"
                                }
                            ],
                            "readinessProbe": {
                                "timeoutSeconds": 1,
                                "initialDelaySeconds": 3,
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-i",
                                        "-c",
                                        "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""
                                    ]
                                }
                            },
                            "livenessProbe": {
                                "timeoutSeconds": 1,
                                "initialDelaySeconds": 30,
                                "tcpSocket": {
                                    "port": 27017
                                }
                            },
                            "resources": {
                                "limits": {
                                    "memory": "${MEMORY_MONGODB_LIMIT}"
                                }
                            },
                            "volumeMounts": [{
                                "name": "${MICROSERVICE_NAME}-db-data",
                                "mountPath": "/var/lib/mongodb/data"
                            }]
                        }],
                        "volumes": [{
                            "name": "${MICROSERVICE_NAME}-db-data",
                            "emptyDir": {
                                "medium": ""
                            }
                        }]
                    }
                }
            }
        }
    ],
    "parameters": [{
            "name": "MICROSERVICE_NAME",
            "description": "The name for the application.",
            "value": "my-microservice",
            "required": true
        },
        {
            "name": "APPLICATION_NAME",
            "description": "Name of the application the microservice belongs to",
            "value": "my-application",
            "required": true
        },
        {
            "name": "GIT_REPO_URL",
            "description": "Git repository URL"
        },
        {
            "name": "GIT_REPO_BRANCH",
            "description": "Git repository branch",
            "value": "dev"
        },
        {
            "name": "GIT_CONTEXT_DIR",
            "description": "Git context directory",
            "value": "/"
        },
        {
            "name": "BASE_IMAGE_NAME",
            "description": "Name of the base image",
            "value": "base"
        },
        {
            "name": "BASE_IMAGE_TAG",
            "description": "Tag of the base image",
            "value": "latest"
        },
        {
            "name": "BASE_IMAGE_NAMESPACE",
            "description": "OpenShift namespace of the base image",
            "value": "openshift"
        },
        {
            "name": "BUILD_CPU_REQUEST",
            "description": "The requested CPU for a build.",
            "value": "100m",
            "required": true
        },
        {
            "name": "BUILD_MEM_REQUEST",
            "description": "The requested memory for a build",
            "value": "1000Mi",
            "required": true
        },
        {
            "name": "BUILD_CPU_LIMIT",
            "description": "The limit of CPU to allow for a build",
            "value": "1000m",
            "required": true
        },
        {
            "name": "BUILD_MEM_LIMIT",
            "description": "The limit of memory to allow for a build",
            "value": "1000Mi",
            "required": true
        },
        {
            "name": "HOSTNAME_HTTP",
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
        },
        {
            "name": "LIVENESS_DELAY",
            "value": "10",
            "description": "Intial mount of time in seconds to wait to perform a liveness check.",
            "required": true
        },
        {
            "name": "READINESS_DELAY",
            "value": "60",
            "description": "Intial mount of time in seconds to wait to perform a readiness check.",
            "required": true
        },
        {
            "name": "NUM_REPLICAS",
            "value": "1",
            "description": "Initial number of replicas to deploy",
            "required": true
        },
        {
            "name": "DEPLOY_CPU_REQUEST",
            "description": "The requested CPU for a deploy.",
            "value": "100m",
            "required": true
        },
        {
            "name": "DEPLOY_MEM_REQUEST",
            "description": "The requested memory for a deploy",
            "value": "512Mi",
            "required": true
        },
        {
            "name": "DEPLOY_CPU_LIMIT",
            "description": "The limit of CPU to allow for a deploy",
            "value": "500m",
            "required": true
        },
        {
            "name": "DEPLOY_MEM_LIMIT",
            "description": "The limit of memory to allow for a deploy",
            "value": "512Mi",
            "required": true
        },
        {
            "name": "MONGO_IMAGE_STREAM_NAMESPACE",
            "description": "Namespace of the mongo openshift image stream",
            "value": "openshift",
            "required": true
        },
        {
            "name": "MEMORY_MONGODB_LIMIT",
            "displayName": "Memory Limit (MongoDB)",
            "description": "Maximum amount of memory the MongoDB container can use.",
            "value": "512Mi",
            "required": true
        },
        {
            "name": "DATABASE_USER",
            "displayName": "MongoDB Username",
            "description": "Username for MongoDB user that will be used for accessing the database.",
            "generate": "expression",
            "from": "user[A-Z0-9]{3}"
        },
        {
            "name": "DATABASE_PASSWORD",
            "displayName": "MongoDB Password",
            "description": "Password for the MongoDB user.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{16}"
        },
        {
            "name": "DATABASE_NAME",
            "displayName": "Database Name",
            "value": "sampledb",
            "required": true
        },
        {
            "name": "DATABASE_ADMIN_PASSWORD",
            "displayName": "Database Administrator Password",
            "description": "Password for the database admin user.",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{16}"
        }
    ],
    "labels": {
        "template": "web-app-mongo"
    }
}
